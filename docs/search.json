[{"path":"https://blueskypie.github.io/cHeatmap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 cHeatmap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"convenience Heatmap","text":"cHeatmap wrapper excellent ComplexHeatmap::Heatmap() function additional functions friendly interface common tasks work, thus called convenience Heatmap. highly recommend reading ComplexHeatmap book advanced use. features: Automatic manual setting values outliers input matrix color scale heatmap dominated outliers option set color-value mappings heatmap legend Automatic coloring dendrogram Easy highlight display values certain cells Discrete color-value mapping integer matrices containing unique values Clustering character matrix based orders characters Interface plot across rows","code":""},{"path":[]},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"reset-the-value-of-outliers","dir":"Articles","previous_headings":"Examples","what":"Reset the value of outliers","title":"convenience Heatmap","text":"Outliers numeric matrix dominate color scale make differences among many cells barely visible, nMat1 .  Set resetOutliers = T detect outliers mat1 reset values, difference values nMat1 can easily visualized. See Reference Manual details. Note upper label legend changes >6.6.  Instead auto-detecting outliers, use colMap set range. Values outside range outliers. default colMap c(\"green4\"=NA, \"white\"=whiteValue, \"red\"=NA).  set upper bound, auto-detect lower bound.","code":"{r setup, include = FALSE, echo = FALSE} knitr::opts_chunk$set(   collapse = TRUE,   comment = \"#>\",   tidy = TRUE ) library(cHeatmap)  set.seed(100) nMat1 <- rnorm(30) uMat1 <- runif(12, -5, 20) mat1 <- matrix(c(nMat1, uMat1), nrow = 6)  cHeatmap(mat1,   name = \"value\", # legend title   resetOutliers = F, # do not detect outliers   cluster_rows = F, cluster_columns = F, # no clustering   cellFun = function(x) { x }, # display all the values   column_split = c(rep(\"nMat1\", 5), rep(\"uMat1\", 2)) # mark the two matrices ) cHeatmap(mat1,   name = \"value\",   resetOutliers = T,   cluster_rows = F, cluster_columns = F,   whiteValue = 0 # set the white values in the legend to 0 ) cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   cluster_rows = F, cluster_columns = F,   colMap = c(-1, 0, 3) ) cHeatmap(mat1,   name = \"value\",   resetOutliers = T,   cluster_rows = F, cluster_columns = F,   colMap = c(NA, 0, 3) )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"manually-set-the-color-value-mapping","dir":"Articles","previous_headings":"Examples","what":"Manually set the color-value mapping","title":"convenience Heatmap","text":"Set colors also value middle color.  Set upper lower bounds.  Set multiple color-value mappings visualize global local differences, example, matrix contains two distant clusters.  Adjust legend lengthen portion cluster 1 shorten portion 1 3 majority cluster 2 (3, 18) increase height whole legend 4cm","code":"cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   cluster_rows = F, cluster_columns = F,   colMap = c(\"blue\" = NA, \"green\" = 5, \"red\" = NA) ) cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   cluster_rows = F, cluster_columns = F,   colMap = c(\"green\" = -1, \"green4\" = 18) ) cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   colMap = c(\"green4\" = -1, \"white\" = 0, \"red\" = 1, #cluster 1              \"yellow\" = 3, \"blue\" = 18) #cluster 2 ) cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   colMap = c(\"green4\" = -1, \"white\" = 0, \"red\" = 1, #cluster 1              \"yellow\" = 3, \"blue\" = 18), #cluster 2   legendBreakDist = c(1, 1, 0.5, 3),   legendHeight = 4 )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"display-cell-values-using-cellfun","dir":"Articles","previous_headings":"Examples","what":"Display cell values using cellFun","title":"convenience Heatmap","text":"Show values (0.5, 1).  Display outliers, e.g. outside range colMap.  Mark outliers *; note default resetOutliers = TRUE numeric matrices.  Color outliers black edge.  Display H cell values > 2 L < 0.  Add black edge cell values > 2 display L < 0.","code":"cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   cluster_rows = F, cluster_columns = F,   colMap = c(-1, 0, 3),   cellFun = function(x) { if (x > 0.5 && x < 1) x } ) cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   cluster_rows = F, cluster_columns = F,   colMap = c(-1, 0, 3),   cellFun = \"o\" # 'o' is hard-coded to represent outliers ) cHeatmap(mat1, cellFun = c(\"o\", \"*\")) cHeatmap(mat1,    cellFun = c(     \"o\", list(\"rect\", col = \"black\", lwd = 2)   ) ) cHeatmap(mat1,   cellFun = function(x) {     if (x > 2) {      \"H\"     } else if (x < 0) \"L\"   } ) cHeatmap(mat1,   cellFun = function(x) {     if (x > 2) {       list(\"rect\", col = \"black\", lwd = 2)     } else if (x < 0) \"L\"   } )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"color-dendrograms-and-split-the-clusters","dir":"Articles","previous_headings":"Examples","what":"Color dendrograms and split the clusters","title":"convenience Heatmap","text":"nRowCluster nColmCluster specify number colors corresponding dendrograms.","code":"cHeatmap(mat1,   name = \"value\",   resetOutliers = F,   nRowCluster = 2, nColmCluster = 3,   row_split = 2, column_split = 3 )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"integer-matrices","dir":"Articles","previous_headings":"Examples","what":"Integer matrices","title":"convenience Heatmap","text":"number unique values greater intAsDiscreteCutoff whose default value 6 cHeatmap parameter settings, color mapping continuous; otherwise, mapping discrete.  Set colors manually show numbers 1, 3, 5.","code":"mati <- matrix(sample(1:100, 42, TRUE), nrow = 6) cHeatmap(mati, name = \"value\") mati <- matrix(sample(1:5, 42, TRUE), nrow = 6) cHeatmap(mati, name = \"value\") cHeatmap(mati,   name = \"value\",   colMap = c(\"red\" = 1, \"pink\" = 2, \"yellow\" = 3, \"green\" = 4, \"green4\" = 5),   cellFun = function(x) {     if (x %in% c(1, 3, 5)) x   } )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"character-matrices","dir":"Articles","previous_headings":"Examples","what":"Character matrices","title":"convenience Heatmap","text":"Cluster matrix converting characters alphabetic orders, .e.  .. f 1 .. 6, manually set color-value mappings.","code":"matc <- matrix(sample(letters[1:6], 42, TRUE), nrow = 6) cHeatmap(matc, name = \"value\") cHeatmap(matc,   name = \"value\",   nColmCluster = 3, nRowCluster = 2,   colMap = c(     \"red\" = \"a\", \"pink\" = \"b\", \"yellow\" = \"c\",     \"green\" = \"d\", \"green2\" = \"e\", \"green4\" = \"f\"   ) )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"row-and-column-annotation","dir":"Articles","previous_headings":"Examples","what":"Row and column annotation","title":"convenience Heatmap","text":"Set annotation colors manually.","code":"# create the matrix ---- mat1 <- matrix(sample(1:100, 42, TRUE), nrow = 6) rownames(mat1) <- paste(\"row\", 1:6) colnames(mat1) <- paste(\"col\", 1:7)  # create the row annotation data frame --- rowDf <- data.frame(Sex = c(\"F\", \"F\", \"M\", \"M\", \"F\", \"M\"), Age = 51:56) rownames(rowDf) <- paste(\"row\", 6:1)  # create the column annotation data frame --- colDf <- data.frame(level = c(\"H\", \"H\", \"M\", \"M\", \"L\", \"L\", \"L\"), order = 7:1) rownames(colDf) <- paste(\"col\", 7:1)  # make sure the rows and columns of the annotation data frame are at the same #   order as those of mat1 stopifnot(all(rownames(mat1) %in% rownames(rowDf)) && nrow(mat1) == nrow(rowDf)) rowDf <- rowDf[rownames(mat1), ] stopifnot(all(colnames(mat1) %in% rownames(colDf)) && ncol(mat1) == nrow(colDf)) colDf <- colDf[colnames(mat1), ]  cHeatmap(mat1, name = \"value\", rowAnnoDf = rowDf, colmAnnoDf = colDf) cHeatmap(mat1,   name = \"value\",   rowAnnoDf = rowDf, colmAnnoDf = colDf,   rowAnnoColMap = list(Sex = c(\"pink\" = \"F\", \"bisque\" = \"M\")),   colmAnnoColMap = list(     level = c(\"red\" = \"H\", \"yellow\" = \"M\", \"green\" = \"L\"),     order = c(\"blue\" = 1, \"blue4\" = 7)   ) )"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"concatenate-two-heatmaps","dir":"Articles","previous_headings":"Examples","what":"Concatenate two heatmaps","title":"convenience Heatmap","text":"Set drawHeatmap = F concatenate multiple heatmaps.","code":"nMat1 <- matrix(rnorm(30), nrow = 6) uMat1 <- matrix(runif(12, -5, 20), nrow = 6)  hm1 <- cHeatmap(nMat1, drawHeatmap = F, name = \"nMat1\") hm2 <- cHeatmap(uMat1, drawHeatmap = F, name = \"uMat1\") hm1 + hm2"},{"path":"https://blueskypie.github.io/cHeatmap/articles/cHeatmap-intro.html","id":"plot-inside-each-row-using-rowdraw","dir":"Articles","previous_headings":"Examples","what":"Plot inside each row using rowDraw","title":"convenience Heatmap","text":"painScore patient 2 plotted across visits. values transformed range (0,1), representing relative values across visits.  Plot lines points multiple rows.","code":"mat1 <- matrix(c(nMat1, uMat1), nrow = 6) rownames(mat1) <- paste(\"pt\", 1:6) colnames(mat1) <- paste(\"visit\", 1:7)  painScore <- rnorm(7)  cHeatmap(mat1,   name = \"value\", cluster_columns = F,   rowDraw = list(     list(\"grid.lines\", col = \"black\", lwd = 2),     matrix(painScore, nrow = 1), # data to be plotted     2 # rows to be plotted   ) ) # longitudinal scores of four patients painScore <- matrix(rnorm(28), nrow = 4) cHeatmap(mat1,   name = \"value\", cluster_columns = F,   rowDraw = list(     list(       list(\"grid.points\", size = 0.5, pch = 15, col = \"blue\"),       list(\"grid.lines\", col = \"black\", lwd = 2)     ),     painScore,      c(2, 3, 4, 5) # row indices of the four patients in mat1   ) )"},{"path":"https://blueskypie.github.io/cHeatmap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jike Cui. Author, maintainer.","code":""},{"path":"https://blueskypie.github.io/cHeatmap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cui J (2023). cHeatmap: Plot Heatmaps. https://github.com/blueskypie/cHeatmap, https://blueskypie.github.io/cHeatmap/.","code":"@Manual{,   title = {cHeatmap: Plot Heatmaps},   author = {Jike Cui},   year = {2023},   note = {https://github.com/blueskypie/cHeatmap, https://blueskypie.github.io/cHeatmap/}, }"},{"path":"https://blueskypie.github.io/cHeatmap/index.html","id":"cheatmap","dir":"","previous_headings":"","what":"Plot Heatmaps","title":"Plot Heatmaps","text":"cHeatmap wrapper excellent ComplexHeatmap::Heatmap() function additional functions friendly interface common tasks work, thus called convenience Heatmap. highly recommend reading ComplexHeatmap book advanced use. See manual examples Since just toy, plan submit CRAN. please install github directly: devtools::install_github(\"blueskypie/cHeatmap\")","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmaps — cHeatmap","title":"Plot heatmaps — cHeatmap","text":"wrapper ComplexHeatmap::Heatmap() additional functions friendly interfaces common tasks plotting heatmaps.","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmaps — cHeatmap","text":"","code":"cHeatmap(   mat1,   whiteValue = NA,   colMap = c(green4 = NA, white = whiteValue, red = NA),   intAsDiscreteCutoff = 6,   legendPos = c(\"right\", \"left\", \"bottom\", \"top\"),   nRowCluster = NULL,   nColmCluster = NULL,   rowAnnoDf = NULL,   colmAnnoDf = NULL,   rowAnnoPara = list(na_col = \"white\"),   colmAnnoPara = list(na_col = \"white\"),   rowAnnoColMap = list(),   colmAnnoColMap = list(),   drawHeatmap = T,   resetOutliers = is.numeric(mat1),   clusterUsingResetValues = FALSE,   cellFun = NULL,   cellFontSize = 9,   cellFontColor = \"black\",   rowDraw = NULL,   legendBreakDist = NULL,   legendHeight = NULL,   ... )"},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmaps — cHeatmap","text":"mat1 numeric character matrix data frame, required. whiteValue Numeric, NULL; value white middle color legend mat1 numeric colMap consists three colors. colMap vector, c(\"green4\"=NA, \"white\"=whiteValue, \"red\"=NA); defines colors used heatmap mapping values, therefore supplied named vector. character mat1, colMap character vector, .e. c('red'='','pink'='b','yellow'='c') unique values mat1 , b, c. numeric mat1, colMap numeric vector, .e. c('blue'= NA,'green'=5, 'red'=10) colMap can supplied w/o names convenience, .e. c(-1, 0, 3); case, length must three names assumed c(\"green4\", \"white\", \"red\") first last value colMap lower upper bounds displayed values; values outside range considered outliers. One first last values colMap can supplied NA; outliers auto-computed resetOutliers TRUE. intAsDiscreteCutoff integer, 6; mat1 integer matrix < 6 unique values, color mapping legend discrete. legendPos one c(\"right\", \"left\", \"bottom\", \"top\") nRowCluster, nColmCluster integer, NULL; number colored clusters row column; different clusters different colors. argument set, assumes cluster_rows cluster_columns TRUE; explicitly set two arguments . also split, .e. columns, set column_split = nColmCluster. rowAnnoDf, colmAnnoDf matrix data frame, NULL; annotation row column. rows rowAnnoDf/colmAnnoDf length order row/column mat1. rowAnnoPara, colmAnnoPara list, list(na_col = \"white\"); passed ComplexHeatmap::rowAnnotation() ComplexHeatmap::columnAnnotation() rowAnnoColMap, colmAnnoColMap list, list(); color mappings row column annotations handled automatically. Use parameter manually set color mappings, names(list) names annotation. item list vector named colors, similar parameter colMap. annotation numeric, vector numeric, .e. c(\"green4\"= -1, \"yellow\"=0, \"red\"=5) annotation numeric, vector character, .e. c('red'='','pink'='b','yellow'='c') drawHeatmap logical, TRUE; uses ComplexHeatmap::draw() merge legends one column draw final heatmap. set TRUE obtain clustering orders, .e. column_order() However, FALSE returned heatmap cHeatmap() concatenated heatmaps. resetOutliers logical, .numeric(mat1); outliers numeric mat1 can stretch whole color scale. TRUE, bounds legend reset max min values excluding ; example,  legend c(10, 0.1, 0, 0.2) 0 0.2 labels 0 >0.2. clusterUsingResetValues logical, FALSE; clustering rows columns use reset values outliers? cellFun NULL; used display info individual cells; text info can formatted cellFontSize cellFontColor. different usages: function determine display certain cells; takes cell value input returned value displayed. example: cellFun = function(x){x}: display value cell cellFun = function(x){(x > 10) x}: display value cells whose values greater 10 cellFun = function(x){(x > 10) '?'}: display '?' sign cellFun = function(x){(x > 10) list('rect',col='black',lwd=2)}: color edges black set line width 2. Check parameters grid::gpar() controls. character vector list: cellFun = 'o': display values outliers mat1 cellFun = c('o','+'): display '+' sign instead value outlier cells cellFun=c('o',list('rect',col='red',lwd=2)): color outlier cells red edges 'o' 'rect' hard coded cases usage convenience; complicated cell drawing, use parameter cell_fun ComplexHeatmap::Heatmap() directly. cellFontSize, cellFontColor numeric, 9; character, \"white\"; format text displayed heatmap cells. rowDraw list, NULL; used plot across rows. list contain following item: function grid package make draw parameters; examples: list('grid.points',size = grid::unit(0.3, \"char\"),gp=grid::gpar(col='black')) ; see grid::grid.points() details. grid.point, can also simply coded list('grid.points',size = 0.3,pch=1,col='black'); parameter col followed items gpar(). list('grid.lines',gp=grid::gpar(col='black',lwd = 2)); see grid::grid.lines() details. grid.lines, can also simply coded list('grid.lines',col='black',lwd = 2) parameter col followed items gpar(). list( list('grid.points',size = 0.3,col='black'), list('grid.lines',col='black',lwd = 2) ) multiple drawings matrix containing data make drawing, number columns integer vector specifying rows make drawing; NULL, means rows mat1 assumes nrow() == nrow(mat1) supplied matrix #2 See parameter layer_fun ComplexHeatmap::Heatmap() complex drawing across block cells. legendBreakDist numeric vector, NULL; set distance two breaks legend can following values: NULL; numeric distance among breaks 1; equal distance among breaks numeric vector represent relative length section two breaks; length length(colMap) - 1; example, c(1, 1, 0.5, 3) colMap = c(\"green4\" = -1, \"white\" = 0, \"red\" = 1, \"yellow\" = 3, \"blue\" = 18) legendHeight numeric, NULL; height vertical legend cm. ... passed ComplexHeatmap::Heatmap()","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmaps — cHeatmap","text":"ComplexHeatmap::HeatmapList object drawHeatmap, ComplexHeatmap::Heatmap object otherwise.","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot heatmaps — cHeatmap","text":"features: Automatic manual setting values outliers input matrix color scale heatmap dominated outliers option set color-value mappings heatmap legend Automatic coloring dendrogram Easy highlight display values certain cells Discrete color-value mapping integer matrices containing unique values Clustering character matrix based orders characters Interface plot across rows","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/cHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot heatmaps — cHeatmap","text":"","code":"#none for now."},{"path":"https://blueskypie.github.io/cHeatmap/reference/getDistinctColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get distinct colors — getDistinctColors","title":"Get distinct colors — getDistinctColors","text":"Get distinct colors","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getDistinctColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get distinct colors — getDistinctColors","text":"","code":"getDistinctColors(n)"},{"path":"https://blueskypie.github.io/cHeatmap/reference/getDistinctColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get distinct colors — getDistinctColors","text":"n number distinct colors","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getDistinctColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get distinct colors — getDistinctColors","text":"character vector distinct colors","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getDistinctColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get distinct colors — getDistinctColors","text":"","code":"getDistinctColors(5) #> [1] \"dodgerblue2\" \"#E31A1C\"     \"green4\"      \"#6A3D9A\"     \"#FF7F00\""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getOutliersInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"Outliers < Q1-1.5IQR > Q3+1.5IQR","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getOutliersInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"","code":"getOutliersInd(x)"},{"path":"https://blueskypie.github.io/cHeatmap/reference/getOutliersInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"x numeric vector matrix","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getOutliersInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"list two int vectors indices outliers low end indices outliers high end","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/getOutliersInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"","code":"getOutliersInd(c(1,100:110,1000)) #> $low #> [1] 1 #>  #> $high #> [1] 13 #>"},{"path":"https://blueskypie.github.io/cHeatmap/reference/gridFuns.html","id":null,"dir":"Reference","previous_headings":"","what":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"process user-supplied functions. See doc parameter rowDraw cHeatmap function details","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/gridFuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"","code":"gridFuns(x, y, fun1)"},{"path":"https://blueskypie.github.io/cHeatmap/reference/gridFuns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"x, y x y used fun1 fun1 list containg info grid function e.g. list('grid.points',size = 0.3,pch=1,col='black')","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/gridFuns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"","code":"# none"},{"path":"https://blueskypie.github.io/cHeatmap/reference/nRoundDigits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of rounding digits — nRoundDigits","title":"Get the number of rounding digits — nRoundDigits","text":"Get number rounding digits","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/nRoundDigits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of rounding digits — nRoundDigits","text":"","code":"nRoundDigits(x)"},{"path":"https://blueskypie.github.io/cHeatmap/reference/nRoundDigits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of rounding digits — nRoundDigits","text":"x numeric number","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/nRoundDigits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of rounding digits — nRoundDigits","text":"abs(x) >= 10, returns 0 else abs(x) >= 1, returns 1 else returns 2","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/nRoundDigits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of rounding digits — nRoundDigits","text":"","code":"nRoundDigits(2.38) #> [1] 1"},{"path":"https://blueskypie.github.io/cHeatmap/reference/vecSwitch.html","id":null,"dir":"Reference","previous_headings":"","what":"given a named vector, switch its content and name — vecSwitch","title":"given a named vector, switch its content and name — vecSwitch","text":"given named vector, switch content name","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/vecSwitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given a named vector, switch its content and name — vecSwitch","text":"","code":"vecSwitch(vec1)"},{"path":"https://blueskypie.github.io/cHeatmap/reference/vecSwitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given a named vector, switch its content and name — vecSwitch","text":"vec1 named vector","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/vecSwitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"given a named vector, switch its content and name — vecSwitch","text":"named vector whose names() equals vec1 content names(vec1)","code":""},{"path":"https://blueskypie.github.io/cHeatmap/reference/vecSwitch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"given a named vector, switch its content and name — vecSwitch","text":"","code":"vecSwitch(c('red'='a','pink'='b','yellow'='c')) #>        a        b        c  #>    \"red\"   \"pink\" \"yellow\""},{"path":"https://blueskypie.github.io/cHeatmap/news/index.html","id":"cheatmap-011","dir":"Changelog","previous_headings":"","what":"cHeatmap 0.1.1","title":"cHeatmap 0.1.1","text":"Added legendBreakDist legendHeight adjust legend.","code":""},{"path":"https://blueskypie.github.io/cHeatmap/news/index.html","id":"cheatmap-010","dir":"Changelog","previous_headings":"","what":"cHeatmap 0.1.0","title":"cHeatmap 0.1.0","text":"Implemented basic functions.","code":""}]
