[{"path":"/articles/cHeatmap-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"cHeatmap-intro","text":"cHeatmap wrapper excellent ComplexHeatmap::Heatmap() function additional functions friendly interface common tasks. ’s created convenience use, thus named convenience Heatmap. highly recommend reading ComplexHeatmap book advanced use. features: automatically manually set value outliers input matrix color heatmap won’t dominated outliers. option set color-value mapping heatmap legend. auto coloring dendrogram easily highlight display values certain cells discrete color-value mapping integer matrix number unique values cutoff clustering character matrix based orders characters interface make plot across rows","code":""},{"path":[]},{"path":"/articles/cHeatmap-intro.html","id":"reset-the-value-of-outliers","dir":"Articles","previous_headings":"Examples","what":"reset the value of outliers","title":"cHeatmap-intro","text":"numeric matrix contains outliers, color range dominated outliers differences among many cells visible, nMat1 .  Detect outliers mat1 reset values, difference values nMat1 can easily visualized. See Reference Manual details. Note upper label legend changed >6.6  instead auto-detecting outliers, set range -1 3 set whiteValue 0. default value colMap c(\"green4\"=NA, \"white\"=whiteValue, \"red\"=NA)  set upper bound, auto-detect lower bound","code":"{r setup, include = FALSE, echo = FALSE} knitr::opts_chunk$set(   collapse = TRUE,   comment = \"#>\" ) library(cHeatmap)  set.seed(100) nMat1=rnorm(30) uMat1=runif(12, -5, 20) mat1=matrix(c(nMat1,uMat1),nrow = 6)  cHeatmap(mat1,name='value',             resetOutliers = F, #do not detect outliers            cluster_rows=F, cluster_columns=F, # no clustering            cellFun = function(x){x}, #display all the values            column_split=c(rep('nMat1',5),rep('uMat1',2)) # mark the two matrices         ) cHeatmap(mat1,name='value',          resetOutliers = T,          cluster_rows=F, cluster_columns=F,          whiteValue = 0 # set the white values in the legend to 0          ) cHeatmap(mat1,name='value',           resetOutliers = F,          cluster_rows=F, cluster_columns=F,          colMap = c(-1,0,3)          ) cHeatmap(mat1,name='value',           resetOutliers = T,          cluster_rows=F, cluster_columns=F,          colMap = c(NA,0,3)          )"},{"path":"/articles/cHeatmap-intro.html","id":"manually-set-the-color-value-mapping","dir":"Articles","previous_headings":"Examples","what":"manually set the color-value mapping","title":"cHeatmap-intro","text":"set colors also value middle color  set upper lower bounds  set multiple color-value mappings","code":"cHeatmap(mat1,name='value',           resetOutliers = F,          cluster_rows=F, cluster_columns=F,          colMap = c('blue'= NA,'green'=5, 'red'=NA)          ) cHeatmap(mat1,name='value',           resetOutliers = F,          cluster_rows=F, cluster_columns=F,          colMap = c('green'= -1, 'green4'=18)          ) cHeatmap(mat1,name='value',           resetOutliers = F,          colMap = c('blue'= -1, 'green4'=3,'yellow'=10,'red'=18)          )"},{"path":"/articles/cHeatmap-intro.html","id":"display-cell-values-using-cellfun","dir":"Articles","previous_headings":"Examples","what":"display cell values using cellFun","title":"cHeatmap-intro","text":"show values (0.5, 1)  display outliers,.e. outside range colMap  mark outliers *; note default resetOutliers TRUE numeric matrices.  highlight outliers black edge  display H cell values > 2 L < 0  add black edge cell values > 2 display L < 0","code":"cHeatmap(mat1,name='value',           resetOutliers = F,          cluster_rows=F, cluster_columns=F,          colMap = c(-1,0,3),          cellFun = function(x){ if(x > 0.5 && x < 1) x}          ) cHeatmap(mat1,name='value',           resetOutliers = F,          cluster_rows=F, cluster_columns=F,          colMap = c(-1,0,3),          cellFun = 'o'          ) cHeatmap(mat1,cellFun=c('o','*')) cHeatmap(mat1,cellFun=c('o',list('rect',col='black',lwd=2) )) cHeatmap(mat1,          cellFun=function(x){                               if(x>2) 'H'                               else if(x<0) 'L'                             }         ) cHeatmap(mat1,          cellFun=function(x){                               if(x>2) list('rect',col='black',lwd=2)                               else if(x<0) 'L'                             } )"},{"path":"/articles/cHeatmap-intro.html","id":"color-dendrograms-and-split-the-clusters","dir":"Articles","previous_headings":"Examples","what":"color dendrograms and split the clusters","title":"cHeatmap-intro","text":"","code":"cHeatmap(mat1,name='value',           resetOutliers = F,          nRowCluster = 2,nColmCluster = 3,          row_split = 2,column_split = 3          )"},{"path":"/articles/cHeatmap-intro.html","id":"integer-matrices","dir":"Articles","previous_headings":"Examples","what":"integer matrices","title":"cHeatmap-intro","text":"number unique values greater intAsDiscreteCutoff, color mapping continuous; otherwise, mapping discrete   set colors manually show numbers 1, 3, 5.","code":"mati=matrix(sample(1:100,42,TRUE),nrow = 6) cHeatmap(mati,name='value') mati=matrix(sample(1:5,42,TRUE),nrow = 6) cHeatmap(mati,name='value') cHeatmap(mati,name='value',          colMap = c('red'=1,'pink'=2,'yellow'=3,'green'=4,'green4'=5),          cellFun = function(x){if(x %in% c(1,3,5)) x}          )"},{"path":"/articles/cHeatmap-intro.html","id":"character-matrices","dir":"Articles","previous_headings":"Examples","what":"character matrices","title":"cHeatmap-intro","text":"cluster matrix converting characters alphabetic orders, .e.  .. f 1 .. 6, manually set color-value mappings.","code":"matc=matrix(sample(letters[1:6],42,TRUE),nrow = 6) cHeatmap(matc,name='value') cHeatmap(matc,name='value',           nColmCluster = 3, nRowCluster = 2,          colMap = c('red'='a','pink'='b','yellow'='c',                     'green'='d','green2'='e','green4'='f')          )"},{"path":"/articles/cHeatmap-intro.html","id":"row-and-column-annotation","dir":"Articles","previous_headings":"Examples","what":"row and column annotation","title":"cHeatmap-intro","text":"set annotation colors manually","code":"# create the matrix ---- mat1=matrix(sample(1:100,42,TRUE),nrow = 6) rownames(mat1)=paste('row',1:6) colnames(mat1)=paste('col',1:7)  # create the row annotation data frame --- rowDf=data.frame(Sex=c('F','F','M','M','F','M'), Age=51:56) rownames(rowDf)=paste('row',6:1)  # create the column annotation data frame --- colDf=data.frame(level=c('H','H','M','M','L','L','L'),  order=7:1) rownames(colDf)=paste('col',7:1)  # make sure the rows and columns of the annotation data frame are at the same #   order as those of mat1 stopifnot(all(rownames(mat1) %in% rownames(rowDf)) && nrow(mat1)==nrow(rowDf)) rowDf=rowDf[rownames(mat1),] stopifnot(all(colnames(mat1) %in% rownames(colDf)) && ncol(mat1)==nrow(colDf)) colDf=colDf[colnames(mat1),]  cHeatmap(mat1,name='value',rowAnnoDf = rowDf,colmAnnoDf = colDf) cHeatmap(mat1,name='value',          rowAnnoDf = rowDf,colmAnnoDf = colDf,          rowAnnoColMap = list(Sex=c('pink'='F','bisque'='M')),          colmAnnoColMap = list(level=c('red'='H','yellow'='M','green'='L'),                                order=c('blue'=1,'blue4'=7))          )"},{"path":"/articles/cHeatmap-intro.html","id":"concatenate-two-heatmaps","dir":"Articles","previous_headings":"Examples","what":"concatenate two heatmaps","title":"cHeatmap-intro","text":"set drawHeatmap = F concatenate multiple heatmaps","code":"nMat1=matrix(rnorm(30),nrow = 6) uMat1=matrix(runif(12, -5, 20),nrow = 6)  hm1=cHeatmap(nMat1,drawHeatmap = F,name='nMat1') hm2=cHeatmap(uMat1,drawHeatmap = F,name='uMat1') hm1 + hm2"},{"path":"/articles/cHeatmap-intro.html","id":"plot-inside-each-row-using-rowdraw","dir":"Articles","previous_headings":"Examples","what":"plot inside each row using rowDraw","title":"cHeatmap-intro","text":"painScore patient 2 plotted across visits. values converted range (0,1), representing relative values across visits.  plot lines points multiple rows","code":"mat1=matrix(c(nMat1,uMat1),nrow = 6) rownames(mat1)=paste('pt',1:6) colnames(mat1)=paste('visit',1:7)  painScore = rnorm(7)  cHeatmap(mat1,name='value',cluster_columns = F,          rowDraw = list(                           list('grid.lines',col='black',lwd = 2),                           matrix(painScore,nrow=1), # data to be plotted                           2  # rows to be plotted                         ) ) painScore = matrix(rnorm(28),nrow=4) cHeatmap(mat1,name='value', cluster_columns = F,          rowDraw = list(                             list(                               list('grid.points',size = 0.5,pch=15,col='blue'),                               list('grid.lines',col='black',lwd = 2)                             ),                             painScore, #scores of four patients                             c(2,3,4,5)                         ) )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jike Cui. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cui J (2023). cHeatmap: Plot Heatmap. R package version 0.0.0.9000.","code":"@Manual{,   title = {cHeatmap: Plot a Heatmap},   author = {Jike Cui},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"cheatmap","dir":"","previous_headings":"","what":"Plot a Heatmap","title":"Plot a Heatmap","text":"goal cHeatmap …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot a Heatmap","text":"can install development version cHeatmap like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Plot a Heatmap","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(cHeatmap) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Jike Cui Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/cHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap. — cHeatmap","title":"Plot a heatmap. — cHeatmap","text":"wrapper ComplexHeatmap::Heatmap() additional functions friendly interfaces common tasks plotting heatmaps.","code":""},{"path":"/reference/cHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap. — cHeatmap","text":"","code":"cHeatmap(   mat1,   whiteValue = NA,   colMap = c(green4 = NA, white = whiteValue, red = NA),   intAsDiscreteCutoff = 6,   legendPos = c(\"right\", \"left\", \"bottom\", \"top\"),   nRowCluster = NULL,   nColmCluster = NULL,   rowAnnoDf = NULL,   colmAnnoDf = NULL,   rowAnnoPara = list(na_col = \"white\"),   colmAnnoPara = list(na_col = \"white\"),   rowAnnoColMap = list(),   colmAnnoColMap = list(),   drawHeatmap = T,   resetOutliers = is.numeric(mat1),   clusteringUsingResetValues = FALSE,   cellFun = NULL,   cellFontSize = 9,   cellFontColor = \"black\",   rowDraw = NULL,   ... )"},{"path":"/reference/cHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap. — cHeatmap","text":"mat1 numeric character matrix data frame, required. whiteValue numeric, NULL. mat1 numeric, value white color legend. colMap vector, c(\"green4\"=NA, \"white\"=whiteValue, \"red\"=NA). defines colors used heatmap mapping values, therefore supplied named vector. character mat1, colMap character vector, .e. c('red'='','pink'='b','yellow'='c') unique values mat1 , b, c. numeric mat1, colMap numeric vector, .e. c('blue'= NA,'green'=5, 'red'=10) colMap can supplied w/o names convenience, .e. c(-1, 0, 3); case, length must three names assumed c(\"green4\", \"white\", \"red\") 1st last value colMap lower upper bounds displayed values; values side range considered outliers. one 1st last values colMap can supplied NA; outliers auto-computed resetOutliers TRUE. intAsDiscreteCutoff integer, 6; mat1 integer matrix < 6 unique values, legend color mapping displayed discrete. legendPos one c(\"right\", \"left\", \"bottom\", \"top\") nRowCluster, nColmCluster integer, NULL; number colored clusters row column; different clusters different colors; argument set, assumes cluster_rows cluster_columns TRUE; explicitly set two arguments . also split column, set column_split = nColmCluster rowAnnoDf, colmAnnoDf matrix data frame, NULL; annotation row column. rows rowAnnoDf/colmAnnoDf length order row/column mat1. rowAnnoPara, colmAnnoPara list, list(na_col = \"white\"); passed ComplexHeatmap::rowAnnotation() ComplexHeatmap::columnAnnotation() rowAnnoColMap, colmAnnoColMap list, list(); color mappings row column annotations handled automatically. Use parameter manually set color mappings, names(list) names annotation. item list vector named colors, similar parameter colMap. annotation numeric, vector numeric , .e. c(\"green4\"= -1, \"yellow\"=0, \"red\"=5) annotation numeric, vector character, .e. c('red'='','pink'='b','yellow'='c') drawHeatmap logical, TRUE; uses ComplexHeatmap::draw() merge legends one columns draw final heatmap. set TRUE obtain clustering orders, .e. column_order() However, FALSE returned heatmap cHeatmap() concatenated another heatmaps. resetOutliers logical, .numeric(mat1); outlier values mat1 can squeeze whole color scale. TRUE, outliers reset max min values excluding . values outliers can displayed directly heatmap cellFontSize cellFontColor. clusteringUsingResetValues logical, FALSE; clustering rows columns use reset values outliers? cellFun NULL; used display info individual cells; text info can formatted cellFontSize cellFontColor. different usages: function determine display certain cells; takes cell value input returns number character. example: cellFun = function(x){x}: display value cell cellFun = function(x){(x > 10) x}: display value cells whose values greater 10 cellFun = function(x){(x > 10) '?'}: display '?' sign cellFun = function(x){(x > 10) list('rect',col='black',lwd=2)}: color edges black set line width 2. Check parameters grid::gpar() details. character vector list: cellFun = 'o': display values outliers mat1 cellFun = c('o','+'): display '+' sign instead value outlier cells cellFun=c('o',list('rect',col='red',lwd=2)): color outliers cells red edges 'o' 'rect' hard coded cases usage convenience; complicated cell drawing, use parameter cell_fun ComplexHeatmap::Heatmap() directly. cellFontSize numeric, 9 cellFontColor character, \"white\" rowDraw list, NULL; used plot across rows. list contain following item: function grid package make draw parameters; examples: list('grid.points',size = grid::unit(0.3, \"char\"),gp=grid::gpar(col='black')) ; see grid::grid.points() details. grid.point, can also simply coded list('grid.points',size = 0.3,pch=1,col='black') parameter col following gpar(). list('grid.lines',gp=grid::gpar(col='black',lwd = 2)); see grid::grid.lines() details. grid.lines, can also simply coded list('grid.lines',col='black',lwd = 2) parameter col following gpar(). list( list('grid.points',size = 0.3,col='black'), list('grid.lines',col='black',lwd = 2) ) multiple drawings matrix containing data make drawing, meeting ncol() == ncol(mat1) integer vector specifying rows make drawing; NULL, means rows mat1 assumes nrow() == nrow(mat1) supplied matrix #2 See parameter layer_fun ComplexHeatmap::Heatmap() complex drawing across block cells. ... passed ComplexHeatmap::Heatmap()","code":""},{"path":"/reference/cHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap. — cHeatmap","text":"ComplexHeatmap::HeatmapList object drawHeatmap, ComplexHeatmap::Heatmap object otherwise.","code":""},{"path":"/reference/cHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a heatmap. — cHeatmap","text":"additional function: automatically manually set value outliers input matrix color heatmap dominated outliers. option set value mapping color heatmap legend. auto coloring dendrogram easily highlight display values certain cells","code":""},{"path":"/reference/cHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap. — cHeatmap","text":"","code":"#none for now."},{"path":"/reference/getDistinctColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get distinct colors — getDistinctColors","title":"Get distinct colors — getDistinctColors","text":"Get distinct colors","code":""},{"path":"/reference/getDistinctColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get distinct colors — getDistinctColors","text":"","code":"getDistinctColors(n)"},{"path":"/reference/getDistinctColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get distinct colors — getDistinctColors","text":"n number distinct colors","code":""},{"path":"/reference/getDistinctColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get distinct colors — getDistinctColors","text":"character vector distinct colors","code":""},{"path":"/reference/getDistinctColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get distinct colors — getDistinctColors","text":"","code":"getDistinctColors(5) #> [1] \"dodgerblue2\" \"#E31A1C\"     \"green4\"      \"#6A3D9A\"     \"#FF7F00\""},{"path":"/reference/getOutliersInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"Outliers < Q1-1.5IQR > Q3+1.5IQR","code":""},{"path":"/reference/getOutliersInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"","code":"getOutliersInd(x)"},{"path":"/reference/getOutliersInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"x numeric vector matrix","code":""},{"path":"/reference/getOutliersInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"list two int vectors indices outliers low end indices outliers high end","code":""},{"path":"/reference/getOutliersInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the indices of outliers in a numeric vector or matrix — getOutliersInd","text":"","code":"getOutliersInd(c(1,100:110,1000)) #> $low #> [1] 1 #>  #> $high #> [1] 13 #>"},{"path":"/reference/gridFuns.html","id":null,"dir":"Reference","previous_headings":"","what":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"process user-supplied functions. See doc parameter rowDraw cHeatmap function details","code":""},{"path":"/reference/gridFuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"","code":"gridFuns(x, y, fun1)"},{"path":"/reference/gridFuns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"x, y x y used fun1 fun1 list containg info grid function e.g. list('grid.points',size = 0.3,pch=1,col='black')","code":""},{"path":"/reference/gridFuns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"a wrapper for grid::grid.points() and grid::grid.lines() — gridFuns","text":"","code":"# none"},{"path":"/reference/nRoundDigits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of rounding digits — nRoundDigits","title":"Get the number of rounding digits — nRoundDigits","text":"Get number rounding digits","code":""},{"path":"/reference/nRoundDigits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of rounding digits — nRoundDigits","text":"","code":"nRoundDigits(x)"},{"path":"/reference/nRoundDigits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of rounding digits — nRoundDigits","text":"x numeric number","code":""},{"path":"/reference/nRoundDigits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of rounding digits — nRoundDigits","text":"abs(x) >= 10, returns 0 else abs(x) >= 1, returns 1 else returns 2","code":""},{"path":"/reference/nRoundDigits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of rounding digits — nRoundDigits","text":"","code":"nRoundDigits(2.38) #> [1] 1"},{"path":"/reference/vecSwitch.html","id":null,"dir":"Reference","previous_headings":"","what":"given a named vector, switch its content and name — vecSwitch","title":"given a named vector, switch its content and name — vecSwitch","text":"given named vector, switch content name","code":""},{"path":"/reference/vecSwitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given a named vector, switch its content and name — vecSwitch","text":"","code":"vecSwitch(vec1)"},{"path":"/reference/vecSwitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given a named vector, switch its content and name — vecSwitch","text":"vec1 named vector","code":""},{"path":"/reference/vecSwitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"given a named vector, switch its content and name — vecSwitch","text":"named vector whose names() equals vec1 content names(vec1)","code":""},{"path":"/reference/vecSwitch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"given a named vector, switch its content and name — vecSwitch","text":"","code":"vecSwitch(c('red'='a','pink'='b','yellow'='c')) #>        a        b        c  #>    \"red\"   \"pink\" \"yellow\""},{"path":"/news/index.html","id":"cheatmap-0009000","dir":"Changelog","previous_headings":"","what":"cHeatmap 0.0.0.9000","title":"cHeatmap 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
